name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: 'GlChemDraw ${{ github.ref_name }}'
          body: |
            GlChemDraw ${{ github.ref_name }} - Cross-platform Chemistry Structure Drawing & NMR Analysis

            What's New
            - Fixed React Hooks Error: Resolved 'Invalid hook call' errors
            - Fixed Structure Drawing Loading: Implemented dynamic loading
            - Enhanced Error Handling: Added comprehensive error boundaries
            - Cross-platform Support: Windows, Mac, and Linux builds

            Downloads
            - Windows: MSI and NSIS installers
            - Mac: DMG and APP bundles
            - Linux: DEB and AppImage packages

            System Requirements
            - Windows: Windows 10/11 (64-bit)
            - Mac: macOS 10.15+ (64-bit)
            - Linux: Ubuntu 18.04+ or equivalent
            - Memory: 4GB RAM minimum, 8GB recommended
            - Storage: 500MB free space
            - Display: 1280x800 minimum resolution
          draft: false
          prerelease: false

  build-windows:
    name: Build Windows
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        run: npm run tauri build

      - name: Upload MSI
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/msi/GlChemDraw_${{ github.ref_name }}_x64_en-US.msi
          asset_name: GlChemDraw_${{ github.ref_name }}_x64_en-US.msi
          asset_content_type: application/octet-stream

      - name: Upload NSIS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/nsis/GlChemDraw_${{ github.ref_name }}_x64-setup.exe
          asset_name: GlChemDraw_${{ github.ref_name }}_x64-setup.exe
          asset_content_type: application/octet-stream

  build-macos:
    name: Build macOS
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        run: npm run tauri build

      - name: Upload DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/dmg/GlChemDraw_${{ github.ref_name }}_x64.dmg
          asset_name: GlChemDraw_${{ github.ref_name }}_x64.dmg
          asset_content_type: application/octet-stream

      - name: Upload APP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/macos/GlChemDraw.app
          asset_name: GlChemDraw_${{ github.ref_name }}_macOS.app.zip
          asset_content_type: application/zip

  build-linux:
    name: Build Linux
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri app
        run: npm run tauri build

      - name: Upload DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/deb/glchemdraw_${{ github.ref_name }}_amd64.deb
          asset_name: glchemdraw_${{ github.ref_name }}_amd64.deb
          asset_content_type: application/octet-stream

      - name: Upload AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/appimage/glchemdraw_${{ github.ref_name }}_amd64.AppImage
          asset_name: glchemdraw_${{ github.ref_name }}_amd64.AppImage
          asset_content_type: application/octet-stream